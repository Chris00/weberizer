opam-version: "2.0"
maintainer: "Christophe Troestler <Christophe.Troestler@umons.ac.be>"
authors: [ "Christophe Troestler <Christophe.Troestler@umons.ac.be>" ]
tags: [ "web" "template" ]
license: "LGPL-3.0 with OCaml linking exception"
homepage: "https://github.com/Chris00/weberizer"
dev-repo: "git+https://github.com/Chris00/weberizer.git"
bug-reports: "https://github.com/Chris00/weberizer/issues"
doc: "https://Chris00.github.io/weberizer/doc"
build: [
  ["dune" "subst"] {pinned}
  ["dune" "build" "-p" name "-j" jobs]
  ["dune" "runtest" "-p" name "-j" jobs] {with-test}
]
depends: [
  "ocaml" {>= "4.03"}
  "dune"
  "ocamlnet"
]
synopsis: "Compile HTML templates into OCaml modules"
description: """
Weberizer is a simple templating engine for OCaml.  It compiles the
template to an OCaml module, providing an easy way to set the
variables and render the template.  String values are automatically
escaped according to the context of the template in which they appear.
You can add you own functions to the generated module â€” for example to
set several related variables at once (you can also hide those
variables from the interface if desired)."""
